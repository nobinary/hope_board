{"version":3,"sources":["Services/ApiConfig.js","Services/ApiMethods.js","Screens/Logout.jsx","Components/Menu.jsx","Components/MenuButton.jsx","Components/MenuContainer.jsx","Components/EditModal.jsx","Components/Note.jsx","Components/NoteModal.jsx","Components/AboutModal.jsx","Components/Footer.jsx","Screens/Board.jsx","Components/Tab.jsx","Components/Tabs.jsx","Screens/MyBoard.jsx","Screens/MyProfile.jsx","Screens/Login.jsx","Screens/Register.jsx","Services/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Api","JwtToken","localStorage","getItem","apiUrl","window","location","hostname","console","log","Axios","create","baseURL","headers","Authorization","fetchNotes","a","get","notes","fetchNote","note_id","resp","postNote","note","post","updateNote","id","put","deleteNote","delete","fetchMyLists","userID","createLike","data","anon","user_id","deleteLike","fetchUser","updateUser","userId","userInfo","password","user","signUp","credentials","setItem","token","signInUser","defaults","error","logOut","clear","Logout","this","props","history","clearUser","then","finally","push","Component","withRouter","Menu","visibility","menuVisibility","myBoard","className","to","myProfile","loginLogout","registerLink","onMouseUp","handleMouseDown","MenuButton","src","MenuContainer","context","state","visible","bind","toggleMenu","e","stopPropagation","setState","EditModal","getNote","content","handleChange","event","target","name","value","onNoteSubmit","preventDefault","handleCloseModal","refresh","catch","showModal","handleOpenModal","update_btn","color","onClick","updateClick","render_update_btn","isOpen","ariaHideApp","transparent","contentLabel","overlayClassName","onRequestClose","onSubmit","type","onChange","required","React","Note","componentDidMount","num_likes","user_liked","delete_btn","deleteClick","noteData","renderBtn","clickLike","likeData","status","error_msg","trackAnons","Number","closeModal","notePosition","top","position","left","transform","rotate","zIndex","style","setUser","alt","user_name","ago_string","NoteModal","assignColor","Math","floor","random","modalColor","placeholder","AboutModal","Footer","Board","getNotesFromApi","renderNotes","length","map","item","index","key","created_at","activeId","anonLikes","includes","Tab","label","activeTab","Tabs","onClickTabItem","tab","children","child","MyBoard","getMyBoard","myNotes","myFavorites","favorites","renderMyNotes","renderMyFavorites","getUser","userName","userEmail","email","submitUserUpdate","message","htmlFor","Login","onSignIn","response","isError","errorMsg","username","renderError","Register","onSignUp","passwordConfirmation","for","href","userData","JWT","verify","App","noteId","newLikes","filter","concat","path","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dc5ade5.chunk.js","sourcesContent":["import Axios from 'axios'\n\nexport const JwtToken = () => localStorage.getItem('token') || null;\n\nconst apiUrl = window.location.hostname === 'localhost' ? 'http://localhost:3000' : 'http://hope-board-api.herokuapp.com'\n\nlet Api;\nexport const createApi = () => {\n  console.log(`createApi running...`)\n  Api = Axios.create({\n  baseURL: apiUrl,\n  headers: {\n\tAuthorization: `Bearer ${JwtToken()}`,\n    'Access-Control-Allow-Origin': '*'\n    }\n  })\n  // console.log(Api.defaults.headers)\n}\ncreateApi();\n\nexport const changeHeader = () => {\n  // console.log(JwtToken());\n  Api.defaults.headers['Authorization'] = `Bearer ${JwtToken()}`;\n  // console.log(Api.defaults.headers)\n}\n\nexport default Api\n\n//ADVANCED:\n// const baseURL = process.env.NODE_ENV === 'development' ?\n//   'http://localhost:3000' : 'https://daisywheel.herokuapp.com'\n// const Api = Axios.create({\n//   baseURL: baseURL\n// })","import Api from './ApiConfig'\nimport { createApi, changeHeader } from './ApiConfig'\n\nexport const fetchNotes = async () => {\n    try {\n      const notes = await Api.get(`/notes`)\n      return notes\n    } catch (error) {\n      console.log(\"Error: \", error)\n    }\n  }\n\n  export const fetchNote = async (note_id) => {\n  console.log(note_id)\ntry {\n  const resp = await Api.get(`/notes/${note_id}`)\n  return resp\n} catch (error) {\n  throw error\n  }\n}  \n\n  export const postNote = async (note) => {\n    console.log(note)\n\ttry {\n\t\tconst resp = await Api.post(`/notes`, note)\n\t\treturn resp\n\t} catch (error) {\n\t\tthrow error\n    }\n}   \n\nexport const updateNote = async (note) => {\n  console.log(note)\n  console.log(note.note.id)\ntry {\n  const resp = await Api.put(`/notes/${note.note.id}`, note)\n  return resp\n} catch (error) {\n  throw error\n  }\n}   \n\n\nexport const deleteNote = async (note) => {\n  console.log(note)\ntry {\n  const resp = await Api.delete(`/notes/${note.note_id}`)\n  return resp\n} catch (error) {\n  throw error\n  }\n}  \n\n  export const fetchMyLists = async (userID) => {\n    try {\n    const notes = await Api.get(`/mine/${userID}`)\n    return notes\n    } catch (error) {\n      console.log(\"Error: \", error)\n    }\n  }\n\n  export const createLike = async (data) => {\n    const anon = data.user_id ? '' : '/anonymous'; // prepends anonymous route to request if no logged-in user\n    try {\n      const resp = await Api.post(`${anon}/likes`, data)\n      return resp\n    } catch (error) {\n      throw error\n      }\n  }   \n\n  export const deleteLike = async (data) => {\n    const anon = data.user_id ? '' : '/anonymous'; // prepends anonymous route to request if no logged-in user\n    try {\n      const resp = await Api.post(`${anon}/likes/delete`, data)\n      return resp\n    } catch (error) {\n      throw error\n      }\n  }   \n\n  export const fetchUser = async (user_id) => {\n    console.log(user_id)\n  try {\n    const resp = await Api.get(`/users/${user_id}`)\n    return resp\n  } catch (error) {\n    throw error\n    }\n  }  \n\nexport const updateUser = async (userId, userInfo, password) => {\n  try {\n    const resp = await Api.put(`/users/${userId}`, {user: userInfo, password: password});\n    console.log(resp);\n    return resp.data;\n  } catch (error) {\n    throw error\n  }\n}\n\n///AUTH\n\nexport const signUp = async credentials => {\n    console.log(credentials)\n    try {\n        const resp = await Api.post(`users/register`, credentials)\n        localStorage.setItem('token', resp.data.token)\n        return resp.data\n    } catch (error) {\n        throw error\n    }\n}\n\nexport const signInUser = async credentials => {\n  console.log('signInUser credentials', credentials)\n  try {\n    const resp = await Api.post(`users/login`, credentials)\n    await localStorage.setItem('token', resp.data.token)\n    // createApi();\n    changeHeader();\n    return resp.data\n  } catch (error) {\n    return {error: error}\n  }\n}\n\nexport const logOut = async userId => {\n  try {\n      await localStorage.clear()\n      return true\n  } catch(error) {\n      throw error\n  }\n\n}\n","import { Component } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {logOut} from '../Services/ApiMethods'\nimport \"../Services/ApiMethods\"\n\n\nclass Logout extends Component {\n    componentDidMount() {\n        const { history, clearUser, userId } = this.props\n        logOut(userId)\n        .then(() => clearUser())\n        .finally(() => history.push('/'))\n    }\n    \n    render() {\n        return ''\n    }\n\n\n }\n \nexport default withRouter(Logout)\n\n\n\n\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Logout from '../Screens/Logout'\nimport '../Style/Menu.scss'\n\n\nexport default class Menu extends Component {\n\n  render() {\n    let visibility = \"hide\";\n\n    if(this.props.menuVisibility) {\n      visibility = \"show\";\n    }\n\n    const myBoard = this.props.userId ?\n      (<h2>\n        <Link className=\"link\" to=\"/myboard\">\n          My Board\n        </Link>\n      </h2>) :\n      null;\n\n      const myProfile= this.props.userId ?\n      (<h2>\n        <Link className=\"link\" to=\"/myProfile\">\n          My Profile\n        </Link>\n      </h2>) :\n      null;\n\n    const loginLogout = this.props.userId ?\n      (\n          <h2>\n          <Link className=\"link\" to=\"/logout\">\n            Logout\n          </Link>\n        </h2>\n      ) :\n      (\n        <h2>\n          <Link className=\"link\" to=\"/login\">\n            Login\n          </Link>\n        </h2>\n      )\n    const registerLink = this.props.userId ?\n      null :\n      (\n        <h2>\n          <Link className=\"link\" to=\"/register\">\n            Register\n          </Link>\n        </h2>\n      )      \n\n    return (\n      <div className=\"menu-nav\">\n      <div id=\"flyoutMenu\"\n        onMouseUp={this.props.handleMouseDown}\n        className={visibility}>\n        <h2>\n          <Link className=\"link\" to=\"/\">\n              Home\n          </Link>\n        </h2>\n        {myBoard}\n        {myProfile}\n        {loginLogout}\n        {registerLink}\n      </div>\n      </div>\n    )\n\n  }\n}\n\n","import React, {Component} from 'react';\nimport '../Style/MenuButton.scss'\n\n\nclass MenuButton extends Component {\n    render() {\n        return (\n            <a\n            src=\"https://i.imgur.com/p9P6bPo.png\" \n            id=\"hamburgerButton\"\n            onMouseUp={this.props.handleMouseDown}\n            >NoteBoard</a>\n        )\n    }\n\n}\n\nexport default MenuButton;","import React, { Component } from 'react'\nimport Menu from './Menu'\nimport MenuButton from './MenuButton'\nimport '../Style/MenuContainer.scss'\n\n\nclass MenuContainer extends Component {\n  constructor(props,context) {\n    super(props,context);\n\n    this.state = {\n      visible: false\n    }\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  handleMouseDown(e) {\n    this.toggleMenu();\n\n    console.log('Clicked');\n    e.stopPropagation();\n  }\n\n  toggleMenu() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <>\n      <MenuButton handleMouseDown={this.handleMouseDown}/>\n      <Menu userId={this.props.userId} handleMouseDown={this.handleMouseDown}\n          menuVisibility={this.state.visible}/>\n          </>\n      // <div>\n      //       <li>\n      //         <Link \n      //       className=\"header-link\" to=\"/\">\n      //         MindBoard\n      //       </Link>\n      //       </li>         \n      // </div>\n    );\n  }\n}\n\nexport default MenuContainer;","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { fetchNote, updateNote } from \"../Services/ApiMethods\";\nimport \"../Style/AboutModal.scss\";\n\nclass EditModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        showModal: false,\n        user_id: this.props.userId,\n        note_id: this.props.note_id,\n        content: \"\",\n      };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.getNote();\n  }\n\n  getNote = async () => {\n    console.log(\"got note!\" + this.props.note_id);\n    let note = await fetchNote(this.props.note_id);\n    console.log(note);\n    this.setState(state => ({\n      content: note.data.content\n    }));\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onNoteSubmit = event => {\n    event.preventDefault();\n    const { note_id, content } = this.state;\n    console.log(note_id);\n    const noteData = {\n      note: {\n        id: note_id,\n        content: content\n      }\n    };\n\n    updateNote(noteData)\n      .then(data => {\n        console.log(data);\n        this.handleCloseModal();\n        this.props.refresh();\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render_update_btn()  {\n      const toggleForm = this.props.update_btn ? \"danger\" : \"\";\n      if (this.props.update_btn === \"true\") {\n        return (\n          <button\n          id=\"update-btn\"\n          className={`${this.props.color}`}\n          onClick={this.updateClick}\n          value={this.props.userId}\n          name={this.props.note_id}\n          onClick={this.handleOpenModal}\n        >\n          Update\n        </button> \n        );\n      } else {\n        return null\n      }\n    }\n\n  render() {\n    return (\n      <div>\n        {this.render_update_btn()}\n        <ReactModal\n          isOpen={this.state.showModal}\n          ariaHideApp={false}\n          transparent={true}\n          contentLabel=\"Minimal Modal Example\"\n          className={` Modal ${this.props.color}`}\n          overlayClassName=\"edit-overlay\"\n          onRequestClose={this.handleCloseModal}\n        >\n          <form className=\"create-form\" onSubmit={this.onNoteSubmit}>\n            <textarea\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"content\"\n              value={this.state.content}\n              //   placeholder=\"Write thoughts and ideas here...\"\n              className={`input  ${this.props.color}`}\n              required\n            ></textarea>\n            <div className=\"post-cont\">\n              <button type=\"submit\" id=\"submit\" className=\"btn btn-default\">\n                Update\n              </button>\n            </div>\n          </form>\n          <button\n            id=\"close-button\"\n            className=\"btn btn-default\"\n            onClick={this.handleCloseModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\nexport default EditModal;\n\n// export default class EditFood extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       name: '',\n//       description: '',\n//       image_url: '',\n//       rating: '',\n//       errorMsg: '',\n//     }\n//   }\n\n//   handleChange = e => this.setState({ [e.target.name]: e.target.value })\n\n//   render() {\n//     const { name, description, image_url, rating } = this.state\n//     return (\n//       <div >\n//         <h3>edit your post</h3>\n\n//         {this.state.errorMsg ? (\n//           <p className=\"error-text\">{this.state.errorMsg}</p>\n//         ) : null}\n//       </div>\n//     )\n//   }\n// }\n","import React, { Component } from 'react'\nimport { createLike, deleteLike, deleteNote } from '../Services/ApiMethods'\nimport '../Style/Note.scss'\nimport ReactModal from 'react-modal'\nimport EditModal from './EditModal'\n\nclass Note extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user_liked: null,\n      num_likes: 0,\n      error_msg: null,\n      delete_btn: false,\n      update_btn: false,\n      showModal: false,\n      userId: null\n    }\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      num_likes: this.props.num_likes,\n      user_liked: this.props.user_liked,\n      delete_btn: this.props.delete_btn,\n      update_btn: this.props.update_btn,\n      userId: this.props.userId\n    });\n  }\n  \n\n  deleteClick = async (e) => {\n    let noteData = {\n      user_id: e.target.value,\n      note_id: e.target.name\n    }\n    await deleteNote(noteData);\n    this.handleCloseModal();\n    this.props.refresh();\n  }\n\n    updateClick = async (e) => {\n      console.log(\"modal works\")\n      // <EditModal/>\n  }\n\n  renderBtn = () => {\n    console.log()\n    const toggleForm = this.state.delete_btn ? \"danger\" : \"\";\n    if (this.state.delete_btn === \"true\") {\n      return (\n        <button\n          className={toggleForm, \"delete-btn\"}\n          onClick={this.deleteClick}\n          value={this.props.userId}\n          name={this.props.note_id}\n        >\n          delete\n        </button>\n      );\n    } else {\n      return null\n    }\n  };\n\n\n  clickLike = async (e) => {\n    let likeData = {\n      user_id: this.props.userId,\n      note_id: e.target.name\n    }\n\n    if (this.state.user_liked === false) {\n      try {\n        const res = await createLike(likeData);\n        if (res.status === 201) {\n          this.setState(state => ({ num_likes: state.num_likes++, user_liked: true }))\n        }\n      } catch (error) {\n        this.setState({ error_msg: error })\n      }\n    } else {\n      try {\n        const res = await deleteLike(likeData);\n        if (res.status === 200) {\n          this.setState(state => ({ num_likes: state.num_likes--, user_liked: false }))\n        }\n      } catch (error) {\n        this.setState({ error_msg: error })\n      }\n    }\n\n    if (!this.props.userId) {\n      this.props.trackAnons(Number(likeData.note_id));\n    }\n\n    if (this.props.closeModal) {\n      this.handleCloseModal();\n      this.props.refresh();\n    }\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n\n    let notePosition;\n    if (this.props.top) {\n      notePosition = {\n        position: 'relative',\n        top: `${this.props.top}px`,\n        left: `${this.props.left}px`,\n        transform: `rotate(${this.props.rotate}deg)`,\n        zIndex: `${this.props.zIndex}`\n      }\n    }\n\n    return (\n      <div id=\"note_main\" style={notePosition ? notePosition : null}>\n        <ReactModal\n          isOpen={this.state.showModal}\n          contentLabel=\"Minimal Modal\"\n          className={`main_note ${this.props.color}`}\n          id=\"Modal\"\n          overlayClassName=\"Overlay\"\n          ariaHideApp={false}\n          onRequestClose={this.handleCloseModal}\n          setUser={this.setUser} \n        >\n           {/* <div> */}\n           {/* {console.log(\n             \"state\" + this.state.delete_btn\n           )} */}\n           <button\n            onClick={this.handleCloseModal}\n            id=\"close-button-2\"\n            className=\"btn btn-default\"\n            >X</button>\n          <div\n            className=\"cont-big-note\">\n            <p>{this.props.content}</p>\n          </div>\n          <div className=\"like_box\">\n            <p className=\"like_content\">Likes: {this.state.num_likes}</p>\n            {this.renderBtn()}\n            <div className=\"like-buttons\">\n              <div className=\"unliked-heart-cont\">\n            <img\n              src={this.state.user_liked ? \"https://i.imgur.com/Yv7Nr4B.png\" : \"https://i.imgur.com/O92Pzls.png\"}\n              onClick={this.clickLike}\n              className=\"like-button btn-default\"\n              value={this.props.userId}\n              name={this.props.note_id}\n              alt=\"corkboard\"\n            />\n            </div>\n            <div className=\"liked-heart-cont\">\n            {/* {this.state.user_liked ? <img src=\"https://i.imgur.com/Yv7Nr4B.png\" className=\"liked-heart\" /> : ``} */}\n            {/* replace XXXXX with real user feedback */}\n            </div>\n          </div>\n          </div>\n          <div\n            className=\"date-from-big\">\n            <div\n              className=\"author-text\">\n              <p>{this.props.user_name}</p>\n            </div>\n            <div\n              className=\"date-content\">\n              <p>{this.props.ago_string}</p>\n            </div>\n          </div>\n          <EditModal\n          note_id={this.props.note_id}\n          color={this.props.color}\n          refresh={this.props.refresh} \n          update_btn={this.props.update_btn}\n          />\n        </ReactModal>\n        <div\n          className={`main_note ${this.props.color}`}\n          onClick={this.handleOpenModal}\n          >\n          <div\n            className=\"text-content\">\n            <p>{this.props.content}</p>\n          </div>\n          <div\n            className=\"date-from\">\n            <div\n              className=\"author-text\">\n              <p>{this.props.user_name}</p>\n            </div>\n            <div\n              className=\"date-content\">\n              <p>{this.props.ago_string}</p>\n            </div>\n          </div>\n      </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Note;\n\n\n\n","import React from 'react'\nimport ReactModal from 'react-modal'\nimport { postNote } from '../Services/ApiMethods'\n// import Modal from '../Components/Modal'\nimport '../Style/NoteModal.scss'\n\nclass NoteModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      user_id: this.props.userId,\n      content: \"\",\n      color: this.assignColor()\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  //MODAL FUNCTION\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ \n      showModal: false, \n      color: this.assignColor(),\n      content: \"\"\n      });\n  }\n\n  //CreateNote Function\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n    assignColor = () => {\n      let number = Math.floor(Math.random() *5)\n      let colorArray = [\"blue\", \"green\", \"pink\", \"yellow\", \"orange\"]\n      return colorArray[number]\n    }  \n  \n    onNoteSubmit = event => {\n      event.preventDefault();\n      const { user_id, content } = this.state;\n      console.log(user_id)\n      const noteData = {\n        note: {\n          user_id: this.props.userId,\n          content: content,\n          color: this.state.color\n        }\n      };\n\n      postNote(noteData)\n        .then(data => {\n          console.log(data);\n          this.handleCloseModal();\n          this.props.refresh();\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    };\n\n  render() {\n    const { user_id, content, color} = this.state;\n    return (\n      <div>\n        <img\n          onClick={this.handleOpenModal}\n          src=\"https://i.imgur.com/jyjtEOG.png\"\n          id=\"create-icon\"\n          className=\"img-responsive\"\n          alt=\"black plus button to create a post\"\n        />\n        <ReactModal\n          color={color}\n          isOpen={this.state.showModal}\n          contentLabel=\"Minimal Modal\"\n          className={`Modal  ${color}`}\n          modalColor={color}\n          overlayClassName=\"Overlay\"\n          ariaHideApp={false}\n          onRequestClose={this.handleCloseModal}\n        >\n          <div className=\"button-contain\">\n          <button\n            onClick={this.handleCloseModal}\n            className=\"btn btn-default\"\n            id=\"close-button\"\n            >X</button>\n            </div>\n          \n          <form className=\"create-form\" onSubmit={this.onNoteSubmit}>\n            <textarea\n              type=\"text\"\n              onChange={this.handleChange}\n              name=\"content\"\n              value={content}\n              placeholder=\"Write thoughts and ideas here...\"\n              className={`input  ${color}`}\n              required\n            ></textarea>\n            <div className=\"post-cont\">\n\n            <button\n              type=\"submit\"\n              id=\"submit\"\n              className=\"btn btn-default\"\n            >\n              Post\n                  </button>\n                  </div>\n          </form>\n\n        </ReactModal>\n      </div>\n    )\n  }\n}\n\n// Modal.setAppElement('#app-base');\n\nexport default NoteModal;","import React from 'react'\nimport ReactModal from 'react-modal'\nimport \"../Style/AboutModal.scss\"\n\n\nclass AboutModal extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            showModal : false\n        };\n\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    handleOpenModal () {\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal () {\n        this.setState({ showModal: false});\n    }\n\n    render() {\n        return (\n            <div>\n                <img\n                onClick={this.handleOpenModal}\n                // src=\"https://i.imgur.com/JgBnwAE.png\" \n                src=\"https://i.imgur.com/I2oqk60.png\"\n                id=\"about-icon\" \n                className=\"img-responsive\"\n                alt=\"black info icon that directs you to how website works\"\n                />\n                <ReactModal \n                    isOpen={this.state.showModal} \n                    contentLabel=\"Minimal Modal Example\" \n                    className=\"Modal blue\" \n                    overlayClassName=\"Overlay\" \n                    onRequestClose={this.handleCloseModal}\n                    >\n                    <div className=\"hiw-header\">Welcome to MindBoard!</div>\n                    <main className=\"hiw-body\">\n                        <p>At MindBoard we understand lorem ipsum dolor ipset.</p>\n                        <p>Browse and click on any note to see what it says.</p>\n                        <p>If you register, you can access to create and like notes!</p>\n                        <p>Once you login, you will have access to MyBoard, which saves all of your posts and favorites.</p>\n                    </main>\n                    <button \n                    id=\"close-button\"\n                    className=\"btn btn-default\"\n                    onClick={this.handleCloseModal}>Close</button>\n                    </ReactModal> \n                \n            </div>\n        )\n    }\n}\nexport default AboutModal","import React from 'react'\n// import FPButton from '../Shared Components/FPButton'\nimport \"../Style/Footer.scss\"\nimport NoteModal from '../Components/NoteModal'\nimport AboutModal from '../Components/AboutModal'\nimport {Link} from 'react-router-dom'\n\nfunction Footer(props) {\n    return (\n      <div id=\"footer_main\">\n          {props.userId && (<NoteModal userId={props.userId} refresh={props.refresh} />)}\n          <AboutModal />\n          {/* <img \n          src=\"https://i.imgur.com/JgBnwAE.png\" \n          id=\"about-icon\" \n          className=\"img-responsive\"\n          alt=\"white info icon that directs you to how website works\" \n          /> */}\n      </div>\n    );\n  }\n  \n  export default Footer;","import React from \"react\";\nimport Logout from './Logout';\nimport MenuContainer from \"../Components/MenuContainer\";\nimport Note from \"../Components/Note\";\nimport Footer from \"../Components/Footer\";\nimport {fetchNotes} from '../Services/ApiMethods'\nimport \"../Style/Board.scss\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentDidMount() {\n    this.getNotesFromApi();\n  }\n\n  getNotesFromApi = async () => {\n     const notes = await fetchNotes(); \n     console.log(notes);\n     this.setState(state => ({\n       notes: notes.data\n     }));\n  }\n\n  renderNotes = () => {\n    const { history } = this.props;\n    if (this.state.notes && this.state.notes.length > 0) {\n      return this.state.notes.map((item, index) => {\n        return (\n          <Note\n            key={item.id}\n            note_id={item.id}\n            user_id={item.user_id}\n            user_name={item.user_name}\n            content={item.content}\n            color={item.color}\n            num_likes={item.num_likes}\n            created_at={item.created_at}\n            ago_string={item.ago_string}\n            history={history}\n            activeId={this.props.userId}\n            trackAnons={this.props.trackAnons}\n            userId={this.props.userId} \n            update_btn=\"false\"\n            user_liked={this.props.anonLikes.includes(item.id) || item.user_liked} // rename this? activeUserLiked, maybe?\n            top={Math.floor(Math.random() * 60)-30}\n            left={Math.floor(Math.random() * 60)-30}\n            rotate={Math.floor(Math.random() * 10) * (Math.random() > .5 ? -1 : 1)}\n            zIndex={this.state.notes.length - index} \n            refresh={this.getNotesFromApi}\n          />\n        );\n      });\n    }\n  };\n\n\n  render() {\n    return (\n      <div id=\"fp_main\">\n        <img\n        id=\"background\" \n        className=\"img-responsive\" \n        src=\"https://i.imgur.com/V324XgZ.jpg\" \n        alt=\"brown corkboard background\" />\n          <div className=\"board-menu\">\n            <MenuContainer userId={this.props.userId} />\n          </div>\n          <div className=\"board-box\">\n            <div className=\"notes\">\n            {this.renderNotes()}\n            </div>\n        </div>\n        <Footer userId={this.props.userId} refresh={this.getNotesFromApi} />\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass Tab extends Component {\n    static propTypes = {\n        activeTab: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n    }\n\n    onClick = () => {\n        const { label, onClick } = this.props;\n        onClick(label);\n    }\n\n    render() {\n        const {\n            onClick,\n            props: {\n                activeTab,\n                label\n            },\n        } = this;\n\n        let className = 'tab-list-item'\n\n        if(activeTab === label) {\n            className += 'tab-list-active'\n        }\n\n        return(\n            <li className={className}\n            onClick={onClick}\n            >\n                {label}\n            </li>\n        )\n    }\n}\nexport default Tab\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Tab from './Tab'\nimport \"../Style/Tabs.scss\"\n\nclass Tabs extends Component {\n    static propTypes = {\n        children: PropTypes.instanceOf(Array).isRequired,\n    }\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            activeTab: this.props.children[0].props.label,\n        }\n    }\n\n    onClickTabItem = (tab) => {\n        this.setState({ activeTab: tab });\n    }\n\n    render() {\n        const {\n            onClickTabItem,\n            props: {\n                children,\n            },\n            state: {\n                activeTab,\n            }\n        } = this;\n\n        return (\n            <div className=\"tabs\">\n                <ul className=\"tab-list tab-ltr\">\n                    {children.map((child) => {\n                        const { label } = child.props;\n\n                        return (\n                            <Tab\n                            activeTab={activeTab}\n                            key={label}\n                            label={label}\n                            onClick={onClickTabItem}\n                            />\n                        )\n                    })}\n                </ul>\n                <div className=\"tab-content\">\n                    {children.map((child) => {\n                        if(child.props.label !== activeTab) return undefined;\n                        return child.props.children;\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\nexport default Tabs","import React from \"react\";\nimport MenuContainer from \"../Components/MenuContainer\";\nimport Note from \"../Components/Note\";\nimport { fetchMyLists } from '../Services/ApiMethods'\nimport Footer from \"../Components/Footer\";\nimport Tabs from '../Components/Tabs'\nimport \"../Style/MyBoard.scss\";\n\nclass MyBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myNotes: [],\n      myFavorites: [],\n      userId: this.props.userId\n    };\n  }\n\n  componentDidMount = async () => {\n    this.getMyBoard();\n  }\n\n  getMyBoard = async () => {\n    const myBoard = await fetchMyLists(this.state.userId);\n    console.log(myBoard);\n    this.setState(state => ({\n      myNotes: myBoard.data.notes,\n      myFavorites: myBoard.data.favorites\n    }));\n  }\n\n  renderMyNotes = () => {\n    const { history } = this.props;\n    if (this.state.myNotes && this.state.myNotes.length > 0) {\n      return this.state.myNotes.map((item, index) => {\n        return (\n          <Note\n            key={item.id}\n            note_id={item.id}\n            user_id={item.user_id}\n            userId={this.props.userId}\n            content={item.content}\n            color={item.color}\n            num_likes={item.num_likes}\n            user_liked={item.user_liked}\n            created_at={item.created_at}\n            history={history}\n            refresh={this.getMyBoard}\n            delete_btn=\"true\"\n            update_btn=\"true\"\n            top={Math.floor(Math.random() * 60) - 30}\n            left={Math.floor(Math.random() * 60) - 30}\n            rotate={Math.floor(Math.random() * 10) * (Math.random() > .5 ? -1 : 1)}\n            zIndex={this.state.myNotes.length - index}\n          />\n        );\n      });\n    }\n  };\n\n  renderMyFavorites = () => {\n    const { history } = this.props;\n    if (this.state.myFavorites && this.state.myFavorites.length > 0) {\n      return this.state.myFavorites.map((item, index) => {\n        return (\n          <Note\n            key={item.id}\n            note_id={item.id}\n            user_id={item.user_id}\n            userId={this.props.userId}\n            setUser={this.setUser}\n            content={item.content}\n            color={item.color}\n            num_likes={item.num_likes}\n            created_at={item.created_at}\n            history={history}\n            user_liked={true}\n            closeModal={true}\n            refresh={this.getMyBoard}\n            delete_btn=\"false\"\n            update_btn=\"false\"\n            top={Math.floor(Math.random() * 60) - 30}\n            left={Math.floor(Math.random() * 60) - 30}\n            rotate={Math.floor(Math.random() * 10) * (Math.random() > .5 ? -1 : 1)}\n            zIndex={this.state.myFavorites.length - index}\n          />\n        );\n      });\n    }\n  };\n\n\n  render() {\n    return (\n      <>\n        <div className=\"myboard_main\">\n          <img\n            id=\"background\"\n            className=\"img-responsive\"\n            src=\"https://i.imgur.com/V324XgZ.jpg\"\n            alt=\"brown corkboard background\"\n          />\n          <div className=\"board_menu\">\n            <MenuContainer userId={this.props.userId} />\n          </div>\n          <div className=\"myboard\">\n            <div className=\"mylists\">\n              <Tabs>\n                <div className=\"posts-tab\" label=\"My Posts\">\n                  <div className=\"posts-tab\"></div>\n                  {this.renderMyNotes()}\n              </div>\n                <div className=\"fav-tab\" label=\"My Favorites\">\n                  {this.renderMyFavorites()}\n              </div>\n              </Tabs>\n            </div>\n          </div>\n        </div>\n        <Footer userId={this.props.userId} refresh={this.getMyBoard} />\n      </>\n    );\n  }\n}\n\nexport default MyBoard;\n","import React from \"react\";\nimport MenuContainer from \"../Components/MenuContainer\";\nimport Footer from \"../Components/Footer\";\nimport {fetchUser, updateUser} from '../Services/ApiMethods'\nimport \"../Style/Board.scss\";\nimport \"../Style/MyBoard.scss\";\nimport \"../Style/MyProfile.scss\"\n\nclass myProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      userEmail: '',\n      password: '',\n      message: '',\n      userId: this.props.userId\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.userId && this.getUser()\n  }\n\n  getUser = async () => {\n    const resp = await fetchUser(this.props.userId);\n    this.setState({\n      userName: resp.data.name,\n      userEmail: resp.data.email\n    })\n  }\n\n  submitUserUpdate = async (e) => {\n    e.preventDefault();\n    const userInfo = {\n      name: this.state.userName,\n      email: this.state.userEmail\n    }\n    try {\n      const resp = await updateUser(this.props.userId, userInfo, this.state.password);\n      console.log('submit: ',resp);\n      if (resp) {\n        this.setState({message: 'User information updated.'})\n      } \n    } catch (error) {\n      console.log(error);\n      this.setState({message: 'Incorrect password. Please try again.'})\n    }\n  }\n\n  handleChange = event => {\n    this.props.message && this.setState({message: ''});\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      \n      <>\n        <div className=\"myboard_main\">\n          <img\n            id=\"background\"\n            className=\"img-responsive\"\n            src=\"https://i.imgur.com/V324XgZ.jpg\"\n            alt=\"brown corkboard background\"\n          />\n          <div className=\"board_menu\">\n            <MenuContainer userId={this.props.userId} \n            />\n          </div>\n          <div className=\"myboard\">\n            {/* {console.log(this.props)} */}\n            <div className=\"board-box\">\n              <div className=\"profile p_modal\">\n                <p className=\"p_header\">My Profile:</p>\n                <form className=\"update-form\" onSubmit={(e) => this.submitUserUpdate(e)}>\n                  <div>\n                    <label htmlFor=\"userName\">User name:</label> \n                    <input\n                      type=\"text\"\n                      onChange={(e) => this.handleChange(e)}\n                      name=\"userName\"\n                      value={this.state.userName}\n                      required\n                    ></input>\n                  </div>\n                  <div>\n                    <label htmlFor=\"userEmail\">E-mail:</label> \n                    <input\n                      type=\"text\"\n                      onChange={(e) => this.handleChange(e)}\n                      name=\"userEmail\"\n                      value={this.state.userEmail}\n                      required\n                    ></input>\n                  </div>\n                  <div>\n                    <label htmlFor=\"password\">Password:</label> \n                    <input\n                      type=\"password\"\n                      onChange={(e) => this.handleChange(e)}\n                      name=\"password\"\n                      value={this.state.password}\n                      required\n                    ></input>\n                  </div>\n                  <div>\n                    {this.state.message}\n                  </div>\n                  <div className=\"post-cont\">\n                    <button type=\"submit\" id=\"submit\" className=\"btn btn-default\">\n                      Update\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        <Footer \n        // userId={this.props.userId} \n        refresh={this.getMyBoard} />\n        </div>\n        </>\n      )\n  }\n}\n  \n  export default myProfile;","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { Component } from \"react\";\nimport { signInUser } from \"../Services/ApiMethods\";\nimport MenuContainer from '../Components/MenuContainer'\nimport \"../Style/Login.scss\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isError: false,\n      errorMsg: \"\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      isError: false,\n      errorMsg: \"\"\n    });\n  };\n\n  onSignIn = async (event) => {\n    event.preventDefault();\n\n    const { email, password } = this.state\n    const response = await signInUser({email: email, password: password})\n    console.log(`resp:`, response);\n    if (response.user) {\n      await this.props.setUser();\n      this.props.history.push('/')\n    } else {\n      this.setState({\n        isError: true,\n        errorMsg: \"Invalid Credentials\",\n        username: \"\",\n        password: \"\"\n      });\n    }\n  };\n\n  renderError = () => {\n    const toggleForm = this.state.isError ? \"danger\" : \"\";\n    if (this.state.isError) {\n      return (\n        <button type=\"submit\" id=\"submit\"  className={toggleForm, \"btn btn-default\"}>\n          {this.state.errorMsg}\n        </button>\n      );\n    } else {\n      return <button type=\"submit\" id=\"submit\"  className=\"btn btn-default\">Sign In</button>;\n    }\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div id=\"note_main\">\n        <img\n          id=\"background\"\n          className=\"img-responsive\"\n          src=\"https://i.imgur.com/V324XgZ.jpg\"\n          alt=\"brown corkboard background\"\n        />\n      <div className=\"nav-bar\">\n      <MenuContainer userId={this.props.userId} />\n      </div>\n        <div id=\"yellow-note\"></div>\n        <main className=\"login-form\">\n          <p className=\"greeting\">Nice to see you again!</p>\n          <h1 className=\"login-header\">Login</h1>\n          <form id=\"login-input\" onSubmit={this.onSignIn}>\n            <label id=\"label\" htmlFor=\"username\">\n              Your Email\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your username\"\n              id=\"input\"\n              required\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n            <label id=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your password\"\n              id=\"input\"\n              name=\"password\"\n              value={password}\n              type=\"password\"\n              onChange={this.handleChange}\n              required\n            />\n            {this.renderError()}\n          </form>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport \"../Style/Register.scss\";\nimport { signUp, signInUser } from '../Services/ApiMethods'\nimport MenuContainer from '../Components/MenuContainer'\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      isError: false,\n      errorMsg: \"\"\n    };\n  }\n\n  handleChange = event =>\n    this.setState({\n      [event.target.name]: event.target.value,\n      isError: false,\n      errorMsg: \"\"\n    });\n\n  onSignUp = event => {\n    event.preventDefault();\n\n    const { name, email, password } = this.state;\n    const userData = {\n      user: {\n        name: name,\n        email: email,\n        password: password\n      }\n    }\n\n    signUp(userData)\n      .then(() => signInUser(this.state))\n      .then(() => this.props.setUser())\n      .catch(error => {\n        console.error(error);\n        this.setState({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirmation: \"\",\n          isError: true,\n          errorMsg: error\n        });\n      });\n    this.props.history.push('/');\n  };\n\n  renderError = () => {\n    const toggleForm = this.state.isError ? \"danger\" : \"\";\n    if (this.state.isError) {\n      return (\n        <button type=\"submit\" id=\"submit\" className={toggleForm, \"btn btn-default\"}>\n          {this.state.errorMsg}\n        </button>\n      );\n    } else {\n      return <button type=\"submit\" id=\"submit\" className=\"btn btn-default\">Sign Up</button>;\n    }\n  };\n\n  render() {\n    const { email, username, password, passwordConfirmation } = this.state;\n\n    return (\n      <div className=\"note_main\">\n        <img\n          id=\"background\"\n          className=\"img-responsive\"\n          src=\"https://i.imgur.com/V324XgZ.jpg\"\n          alt=\"brown corkboard background\"\n        />\n        <div className=\"nav-link\">\n          <MenuContainer userId={this.props.userId} />\n        </div>\n        <div id=\"blue-note\"></div>\n        <main className=\"register-form\">\n          <h1 className=\"register-header\">Register</h1>\n          <form id=\"register-input\" onSubmit={this.onSignUp}>\n            <label id=\"label\" for=\"name\">\n              Name\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              name=\"name\"\n              onChange={this.handleChange}\n              id=\"input\"\n              required\n            ></input>\n            <label id=\"label\" for=\"username\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              id=\"input\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n              required\n            ></input>\n            <label id=\"label\" for=\"password\">\n              Password\n            </label>\n            <input\n              placeholder=\"Enter your password\"\n              id=\"input\"\n              name=\"password\"\n              value={password}\n              type=\"password\"\n              onChange={this.handleChange}\n              required\n            ></input>\n            <label id=\"label\" for=\"password\">\n            Password Confirmation</label>\n            <input\n              required\n              id=\"input\"\n              name=\"passwordConfirmation\"\n              value={passwordConfirmation}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              onChange={this.handleChange}\n            />\n            {this.renderError()}\n            {/* <button type=\"submit\" id=\"submit\" className=\"btn btn-default\">\n              Submit\n            </button> */}\n            <p id=\"member-link\">\n              Already a member? Login <a href=\"/login\">here</a>.\n            </p>\n          </form>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);\n","import JWT from 'jsonwebtoken';\n\nlet JwtToken = localStorage.getItem('token') || null;\nconst TOKEN_KEY = 'holocene_slaughter!666'; // this needs to end up protected somehow\n\nconst verify = () => {\n    try {\n        const data = JWT.verify(JwtToken, TOKEN_KEY);\n        // console.log('verified data: ', data);\n        return data;\n    } catch (error) {\n        return error;\n    }\n}\n\nconst userData = () => {\n    JwtToken = localStorage.getItem('token') || null;\n    return verify();\n}\n\n\nexport default userData;","import React from 'react';\nimport MenuContainer from './Components/MenuContainer'\nimport Board from './Screens/Board'\nimport MyBoard from './Screens/MyBoard'\nimport MyProfile from './Screens/MyProfile'\nimport Login from './Screens/Login'\nimport Register from './Screens/Register' \nimport Logout from './Screens/Logout'\nimport {Switch, Route} from 'react-router-dom'\nimport userData from './Services/Auth';\nimport logOut from './Services/Auth';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.scss';\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null,\n      anonLikes: []\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setUser();\n  }\n\n  setUser = async () => {\n\n    const user = await userData().user;\n\n    if (user) {\n      this.setState({\n        userId: user.id,\n        userEmail: user.email,\n        userName: user.name,\n        anonLikes: []\n      })\n    }\n  }\n\n  clearUser = () => {\n    this.setState({ userId: null })\n  }\n\n  trackAnons = (noteId) => {\n    if (this.state.anonLikes.includes(noteId)) {\n      const newLikes = this.state.anonLikes.filter(id => id != noteId);\n      this.setState({\n        anonLikes: newLikes\n      })\n    } else {\n      const newLikes = this.state.anonLikes.concat([noteId]);\n      this.setState({\n        anonLikes: newLikes\n      })\n    }\n  }\n\n\n  render () {\n    const myBoard = this.state.userId ? (<MyBoard userId={this.state.userId} />) : (<Login setUser={this.setUser} />)\n    const myProfile = this.state.userId ? (<MyProfile userId={this.state.userId} />) : (<Login setUser={this.setUser} />)\n\n    return (\n      <div className=\"App\">\n        <Switch>\n            <Route path=\"/register\">\n              <Register setUser={this.setUser} />\n            </Route>\n            <Route path=\"/login\">\n              <Login setUser={this.setUser} />\n            </Route>\n            <Route path=\"/logout\">\n              <Logout clearUser={this.clearUser} />\n            </Route>\n            <Route path=\"/myboard\">\n              {myBoard}\n            </Route>\n            <Route path=\"/myprofile\">\n            {myProfile}\n            </Route>\n            <Route path=\"/\">\n              <Board userId={this.state.userId} anonLikes={this.state.anonLikes} trackAnons={this.trackAnons} />\n            </Route>\n          </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}